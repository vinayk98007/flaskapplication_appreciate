name: Deploy Flask App with Promtail to ECS

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # Build & Push Flask App Image
      - name: Build & Push Flask App Image
        run: |
          IMAGE_TAG=latest
          ECR_URL=877407756445.dkr.ecr.ap-south-1.amazonaws.com/ecs-loki-demo-repo
          docker build --platform linux/amd64 -t $ECR_URL:$IMAGE_TAG ./flask_app
          docker push $ECR_URL:$IMAGE_TAG

      # Build & Push Promtail Image
      - name: Build & Push Promtail Image
        run: |
          IMAGE_TAG=latest
          ECR_URL=877407756445.dkr.ecr.ap-south-1.amazonaws.com/promtail-custom
          docker build --platform linux/amd64 -t $ECR_URL:$IMAGE_TAG ./promtail
          docker push $ECR_URL:$IMAGE_TAG

      # Register new ECS Task Definition and capture revision ARN
      - name: Register ECS Task Definition
        id: register-task
        run: |
          REVISION=$(aws ecs register-task-definition \
            --cli-input-json file://ecs-task-def.json \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text)
          echo "revision=$REVISION" >> $GITHUB_OUTPUT

      # Update ECS Service with the exact revision ARN
      - name: Update ECS Service
        run: |
          aws ecs update-service \
            --cluster ecs-loki-demo-cluster \
            --service ecs-loki-demo-service \
            --task-definition ${{ steps.register-task.outputs.revision }} \
            --force-new-deployment
